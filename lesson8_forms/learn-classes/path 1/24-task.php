<?php
//Напишите реализацию методов класса ArrayAvgHelper,
//заготовки методов которого расположены ниже.
//Математическая подсказка: корень первой степени - это само число.
//То есть calcSqrt(число, 1) должно просто вернуть само число.
//Математическая подсказка: корень любой степени можно найти с помощью функции pow, просто параметром передав ей дробь.
//Например, pow(число, 1/3) - так найдем корень третьей степени.

class ArrayAvgHelper
{
    /*
        Находит сумму первых
        степеней элементов массива:
    */
    public function getAvg1($arr)
    {
        return $this->calcSqrt($this->getSum($arr,1), 1);
    }

    /*
        Находит сумму вторых степеней
        элементов массива и извлекает
        из нее квадратный корень:
    */
    public function getAvg2($arr)
    {
        return $this->calcSqrt($this->getSum($arr,2), 2);
    }

    /*
        Находит сумму третьих степеней
        элементов массива и извлекает
        из нее кубический корень:
    */
    public function getAvg3($arr)
    {
        return $this->calcSqrt($this->getSum($arr,3), 3);
    }

    /*
        Находит сумму четвертых степеней
        элементов массива и извлекает
        из нее корень четвертой степени:
    */
    public function getAvg4($arr)
    {
        return $this->calcSqrt($this->getSum($arr,4), 4);
    }

    /*
        Вспомогательный метод, который параметром
        принимает массив и степень и возвращает
        сумму степеней элементов массива:
    */
    private function getSum($arr, $power)
    {
        $sum = 0;

        foreach ($arr as $item) {
            $sum += pow($item,$power);
        }

        return $sum;
    }

    /*
        Вспомогательный метод, который параметром
        принимает целое число и степень и возвращает
        корень заданной степени из числа:
    */
    private function calcSqrt($num, $power)
    {
        if ($power == 1) {
            return $num;
        }
        return pow($num,1/$power);
    }
}

echo (new ArrayAvgHelper())->getAvg1([1,2,3]);
